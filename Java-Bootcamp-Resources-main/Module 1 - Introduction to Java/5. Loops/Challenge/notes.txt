    /** Task 1 – make a function that returns a random number between 1 and 13
     * Function name – drawRandomCard
     * @return (int)
     *
     * Inside the function:
     *   1. Gets a random number between 1 and 13.
     *   2. Returns a card.
     */

    //To check rc
    for (int i = 1; i < 20; i++) {
        System.out.println(drawRandomCard());  
    }
            for (int i = 1; i < 6; i++) {
            System.out.println(cardString(drawRandomCard()));  
        }

    /** Task 2 – make a function that returns a String drawing of the card.
     * Function name – cardString
     * @param cardNumber (int)
     * @return (String)
     *
     * Inside the function:
     *   1. Returns a String drawing of the card.
     */

     //Task 3 – Wait for the user to press enter.

             
    //Task 4 – Get two random cards.
    //       – Print them: \n You get a \n" + <randomCard> + "\n and a \n" + <randomCard>

    //Task 5 – Print the sum of your hand value.
    //       – print: your total is: <hand value>

    //Task 6 – Get two random cards for the dealer.
    //       – Print: The dealer shows \n" + <first card> + "\nand has a card facing down \n" + <facedown card>
    //       – Print: \nThe dealer's total is hidden

    /** Task 7 – make a function that asks the user to hit or stay.
     * Function name – hitOrStay
     * @return (String)
     *
     * Inside the function:
     *   1. Asks the user to hit or stay.
     *   2. If the user doesn't enter "hit" or "stay", keep asking them to try again by printing:
     *      Please write 'hit' or 'stay'
     *   3. Returns the user's option 
     */

     Approach two:
     String response = scan.nextLine();
    
     while(true){
        if(response.equals("hit") || response.equals("stay")){
            break;
        }
        return response;
     }


             //Task 8 – Keep asking the player to hit or stay (while loop).
        //       1. Every time the player hits
        //             – draw a new card.
        //             – calculate their new total.
        //             – print: (new line) You get a (new line) <show new card>.
        //             - print: your new total is <total>

        //       2. Once the player stays, break the loop.